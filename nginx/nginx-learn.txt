nginx.conf配置

1.文件结构可以大致分为：
events {         #events块
   ...
}

http      #http块
{
    ...   #http全局块
    server        #server块
    {
        ...       #server全局块
        location [PATTERN]   #location块
        {
            ...
        }
        location [PATTERN]
        {
            ...
        }
    }
    server
    {
      ...
    }
    ...     #http全局块
}

2.模块基本讲解
    a、全局块：

    配置影响nginx全局的指令。一般有运行nginx服务器的用户组，nginx进程pid存放路径，日志存放路径，配置文件引入，允许生成worker process数等。

    b、events块：
    配置影响nginx服务器或与用户的网络连接。有每个进程的最大连接数，选取哪种事件驱动模型处理连接请求，是否允许同时接受多个网路连接，开启多个网络连接序列化等。

    c、http块：
    可以嵌套多个server，配置代理，缓存，日志定义等绝大多数功能和第三方模块的配置。如文件引入，mime-type定义，日志自定义，是否使用sendfile传输文件，连接超时时间，单连接请求数等。

    d、server块：
    配置虚拟主机的相关参数，一个http中可以有多个server。

    e、location块：
    配置请求的路由，以及各种页面的处理情况。

3.模块配置详细解析
    #user yanxh yanxh;  #配置用户或者组，默认为nobody nobody。
    #worker_processes 1;  #允许生成的进程数，默认为1
    #pid logs/nginx.pid;   #指定nginx进程运行文件存放地址
    error_log log/error.log debug;  #制定日志路径，级别。这个设置可以放入全局块，http块，server块，级别以此为：debug|info|notice|warn|error|crit|alert|emerg
    events {
        #accept_mutex on;   #设置网路连接序列化，防止惊群现象发生，默认为on
        #multi_accept off;  #设置一个进程是否同时接受多个网络连接，默认为off
        #use epoll;        #事件驱动模型，select|poll|kqueue|epoll|resig|/dev/poll|eventport
        worker_connections  512;    #最大连接数，默认为512
    }
    http {
        include       mime.types;   #文件扩展名与文件类型映射表
        default_type  application/octet-stream; #默认文件类型，默认为text/plain

        #access_log off; #取消服务日志
        #log_format myFormat '$remote_addr–$remote_user [$time_local] $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for'; #自定义格式

        #access_log log/access.log myFormat;  #combined为日志格式的默认值

        sendfile on;   #允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。
        #sendfile_max_chunk 100k;  #每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。
        keepalive_timeout 65;  #连接超时时间，默认为75s，可以在http，server，location块。

        #负载均衡配置的服务列表 默认使用轮询
        upstream www.cainiaocoder.com {
            server 127.0.0.1:8070;
            server 127.0.0.1:8080;
            server 127.0.0.1:8090;
        }

        error_page 404 500 502 503 504  /50x.html; #错误页

        proxy_intercept_errors on;    #如果被代理服务器返回的状态码为400或者大于400，设置的error_page配置起作用。默认为off
        #proxy_method get;    #支持客户端的请求方法。post/get

        proxy_http_version 1.0 ; #Nginx服务器提供代理服务的http协议版本1.0，1.1，默认设置为1.0版本
        proxy_connect_timeout 1;   #nginx服务器与被代理的服务器建立连接的超时时间，默认60秒
        proxy_read_timeout 1; #nginx服务器想被代理服务器组发出read请求后，等待响应的超时间，默认为60秒。
        proxy_send_timeout 1; #nginx服务器想被代理服务器组发出write请求后，等待响应的超时间，默认为60秒。
        proxy_ignore_client_abort on;  #客户端断网时，nginx服务器是否终端对被代理服务器的请求。默认为off

        server {
            keepalive_requests 120; #单连接请求上限次数。
            listen       80;   #监听端口，默认80端口
            server_name  127.0.0.1;   #监听地址
            location  ~*^.+$ { #请求的url过滤，正则匹配，~为区分大小写，~*为不区分大小写。一般直接配置为/
                root D:\yxhData\staticData;  #nginx动静分离的静态资源路径
                #index index.html index.htm;  #设置默认页
                proxy_pass  http://www.cainiaocoder.com;  #请求转向mysvr 定义的服务器列表
                #deny 127.0.0.1;  #拒绝的ip
                #allow 10.10.10.111; #允许的ip
            }
        }
    }

4.注意
    a.自定义格式中：
        $remote_user ：用来记录客户端用户名称；
        $time_local ： 用来记录访问时间与时区；
        $request ： 用来记录请求的url与http协议；
        $status ： 用来记录请求状态；成功是200；
        $body_bytes_s ent ：记录发送给客户端文件主体内容大小；
        $http_referer ：用来记录从那个页面链接访问过来的；
        $http_user_agent ：记录客户端浏览器的相关信息。
    b.惊群现象：
        一个网路连接到来，多个睡眠的进程被同事叫醒，但只有一个进程能获得链接，这样会影响系统性能。
    c.每个指令必须有分号结束

